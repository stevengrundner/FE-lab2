/* Copyright (c) 2023 Promineo Tech
   Author:  Promineo Tech Academic Team
   Subject:  CSS Lab
   FE Lab02
*/
/*----------------------------------------------------
Key Terms:
* selector
* class
* id 
* element 
* flex 

Objectives:
* Use CSS selectors to target specific HTML elements and apply styles to them.
* Use CSS properties to change the layout, typography, and visual design of the webpage.
* Use the CSS box model to control the size and spacing of HTML elements.
* Use CSS to create a responsive layout that adapts to different screen sizes and devices.
* Use browser developer tools to inspect and debug their CSS.
-----------------------------------------------------

Instructions: The HTML file is complete and images have been provided. The CSS file is missing many properties but all necessary ELEMENTS, ID, and CLASS SELECTORS are already provided. Use the HTML file to find the element's ID or CLASS to be used as a selector in the CSS file to add the properties in the correct place. The CSS file is already linked to the HTML file.

-----------------------------------------------------

PART 1: Using the ELEMENT Selector:
--      * Step 1: Target the html BODY element and give it a top and bottom margin of 1rem and a left and right margin of 5rem.
--      * Step 2: Target the page title and give it a filter of drop-shadow with x offset of 2 pixels, y offset of 2 pixels, blur of 1 pixel and hex color code of #0f6a9e.(See documentation https://developer.mozilla.org/en-US/docs/Web/CSS/filter)
--      * Step 3: Target all of the paragraphs and lists on the page to give it a font size of 20 pixels.    
--      * Step 4: Target all of the image elements, assign the following:
        * margin (top, right, bottom, and left) of 1 rem
        * border radius of 1rem (See documentation https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius)
        * box shadow with an x offset of 2 pixels, y offset of 2 pixels, blur of 2 pixels, spread radius of 1 pixel, a, rgb color of black with a transparency of 0.5. (See documentation https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow)
--      * Step 5: The top image has a caption, give it a font color of rgb(0, 58, 66).
--      * Step 6: Align the paragraph in the footer to the center.(See documentation https://developer.mozilla.org/en-US/docs/Web/CSS/text-align)

-----------------------------------------------------

PART 2: Using ID or CLASS Selectors: 
--      * Step 1: Notice that there are 2 images at the top, one shorter than the other. In the HTML file, find the ID for the shorter image and give it a property of {display: none;} in the CSS file.
--      * Step 2: Now that the shorter image is hidden, when the screen is 500 pixels or less, the shorter image needs to display once again and the longer image needs to be hidden. Go to the last MEDIA QUERY in the CSS file and add the necessary properties to make this happen. If using Chrome, use the Chrome Dev tools to check the web page's responsiveness.
--      * Step 3: The caption for the top banner image is not under the image like it should be. Add a property to make the caption wrap under the image using flex.
--      * Step 4: In the DIV that has the 4 images, justify the content by putting space around each image.

* Step 5: Give the DIV that houses the "Top 5 Places to Visit..." a background color of rgb(0, 58, 66) and a border radius of 1 rem.

* Step 6: The DIV that houses the "Tips and Reccs" appears to be squished when the screen size is less than 1100 pixels. Add to the appropriate MEDIA QUERY a property that will allow the div to wrap down and then justify the contents to the center. Start by taking a look at the CSS for that DIV outside of the MEDIA QUERY to understand how the DIV is behaving.
-----------------------------------------------------
*/

/* ↓ YOUR CSS CODE HERE ↓  */

/* step 1 */
body { margin: 1rem 5rem
}

/* step 2 */
h1 {
        filter: drop-shadow(2px 2px 1px #0f6a9e);
}

/* step 3 */
p, li {    
        font-size: 20px;
}

/* step 4 */
img{
        margin: 1rem;
        border-radius: 1rem;
        box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.5);
}

/* step 5 */
figcaption{
        text-align: center;
        color: rgb(0,58,66);
}

/* step 6 */
footer{
        text-align: center;
}

/* 
The asterisk (*) selector targets every element on the page. It is called the UNIVERSAL SELECTOR. Using a temporary red border around elements can prove to be helpful with visualizing the CSS box-model. Seeing all of the margins, borders, and padding of all 
of the elements on the page can help fix issues with spacing too, especially if you're new to CSS. 
*/

/* ---UNIVERSAL SELECTOR--- */

#banner-short{
        width: 230px;
        display: none;
}

#banner-long{
        max-width:100%;
        height:auto; 
}

.img-div{
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
}

/* OPTIONAL ↓ REMOVE COMMENTS TO SEE RED BORDER:*/

/* ---ELEMENT SELECTORS--- */

/* ---CUSTOM CLASS NAME SELECTORS--- */

/* ----- MEDIA QUERIES for RESPONSIVE DESIGN ----- */

/* ------------------------- */
